COMMENT: GUIの利用法
STATUS: finished 6.3.054
TRANSLATOR: 清水俊彦(しみず) <mailto:t_smz@syd.odn.ne.jp>

*usr_09.txt*	For Vim version 6.3.  Last change: 2001 Sep 03

		     VIM USER MANUAL - by Bram Moolenaar

				  GUIを使う


vimは極く普通の端末で動きます。gvimは同じこともできますが、もうちょっとだけ
できることがあります。GUIではメニューやツールバー、スクロールバーといった部
品を提供します。本章ではGUIが提供する追加事項について説明します。

|09.1|	GUIの部品
|09.2|	マウスを使う
|09.3|	クリップボード
|09.4|	選択モード

     Next chapter: |usr_10.txt|  大きな変更を行う
 Previous chapter: |usr_08.txt|  ウィンドウの分割
Table of contents: |usr_toc.txt|

==============================================================================
*09.1*	GUIの部品

gVimを起動するためのアイコンがデスクトップにあるかもしれません。でなければ、
次のコマンドのどちらかでそれができます。 >

	gvim file.txt
	vim -g file.txt

うまく動かないようであれば、GUIをサポートしていないバージョンのvimだという
ことです。まず最初にGUI版をインストールしてください。
vimはウィンドウを開いて、そこに"file.txt"を表示します。ウィンドウの見た目は
お使いのvimのバージョンに依りますが、概ね次のような画面が出るはずです。
(この図はASCIIで正しく表示されます)

	+----------------------------------------------------+
	| file.txt + (~/dir) - VIM			   X |	<- window title
	+----------------------------------------------------+
	| File	Edit  Tools  Syntax  Buffers  Window  Help   |	<- menubar
	+----------------------------------------------------+
	| aaa  bbb  ccc  ddd  eee  fff	ggg  hhh  iii  jjj   |	<- toolbar
	| aaa  bbb  ccc  ddd  eee  fff	ggg  hhh  iii  jjj   |
	+----------------------------------------------------+
	| file text					 | ^ |
	| ~						 | # |
	| ~						 | # |	<- scrollbar
	| ~						 | # |
	| ~						 | # |
	| ~						 | # |
	|						 | V |
	+----------------------------------------------------+

一番大きな場所はファイル内容が占めています。これは端末での表示と同じやり方
で表示しますが、色やフォントは違っているだろうと思います。


THE WINDOW TITLE [ウィンドウタイトル]

一番上はウィンドウタイトルです。この部分はウィンドウシステム(WindowsとかXの
ウィンドウマネージャとか)が描画します。vimは現在のファイル名をタイトルに設
定します。一部の特殊文字やファイル名のディレクトリ部分はカッコで囲みます。
特殊文字というのは以下の通りです。

	-	このファイルは変更不可である。(例：ヘルプファイル)
	+	このファイルは変更されている。
	=	このファイルは読み込み専用である。
	=+	このファイルは読み込み専用だが、変更を含んでいる。

何も表示されていなければ、通常の変更していないファイルだということです。


メニューバー
------------

メニューの使い方はわかりますよね？ vimは便利な項目とプラスアルファがありま
す。メニューをざっと見て、何に使えそうかを理解しておいてください。
[編集]-[全体設定]には関連したサブメニュー設定があります。次のようなエントリ
が見つかるでしょう。

	ツールバー表示切替	   ツールバーの表示のon/off
	スクロールバー(下)表示切替 スクロールバー(下)の表示のon/off
	スクロールバー(左)表示切替 スクロールバー(左)の表示のon/off
	スクロールバー(右)表示切替 スクロールバー(右)の表示のon/off

ほとんどのシステムではメニューの切り離しができます。メニューの最初にある点
線のような項目を選択します。すると、メニューと同じ内容の別ウィンドウが表示
されます。あなたがそれを閉じるまでは、そのウィンドウは開いたままです。


ツールバー
----------

ここにはよく使われる機能をアイコンとして格納しています。うまくいけば、アイ
コンはそれを見れば意味がわかります。マウスをアイコンの上に動かして、クリック
せずに１秒ほど待つと、ツールチップと呼ばれるちょっとした説明を表示します。

メニューの[編集]-[全体設定]-[ツールバー表示切換]を使うとツールバーを表示しな
いようにできます。ツールバーを全く使わないのであれば、次のコマンドをvimrcに
書いておくこともできます。 >

	:set guioptions-=T

これは'guioption'オプションから"T"フラグを取り除きます。GUIの他の部分につい
てもこのオプションを使って使用する/しないを指定できます。詳しくはこのオプ
ションのヘルプをご覧ください。


スクロールバー
--------------

デフォルトでは右側にスクロールバーが１つあります。これの機能は明確です。
ウィンドウを分割すると各ウィンドウ用のスクロールバーが作られます。
メニュー[編集]-[全体設定]-[スクロールバー(下)表示切換]を使えば横スクロール
バーを表示できます。これはdiffモードで有効です。これは差分モードの時や'wrap'
オプションをoffにしている時に便利です。(詳しくは後で説明します)

垂直分割しているウィンドウがある時は、右側のウィンドウにだけスクロールバーが
付きます。ただし、左側のウィンドウにカーソルを移動するとスクロールバーはその
ウィンドウの管理下に置かれます。
縦分割ウィンドウを使う場合は左側にスクロールバーを付けるかどうか考えてくださ
い。これはメニューから選ぶか、'guioptions'で設定できます。
>
	:set guioptions+=l

このコマンドは'guioptions'に'l'フラグを追加します。

==============================================================================
*09.2*	マウスの利用

標準は素晴らしい。Microsoft Windowsでは文字列を選択する標準的な方法としてマ
ウスが使えます。X Windowでもマウスを使う標準的な方法が用意されています。
ただ不幸なことにこの２つの標準は繰作方法などが同じではありません。
幸運なことにvimではカスタマイズができます。マウスの振る舞いをX Windowsのマウ
ス方式とすることも、Microsoft Windowsのマウス方式とすることもできます。次の
コマンドはマウスの振る舞いをX Windowのマウス方式に設定します。 >

	:behave xterm

The following command makes the mouse work like a Microsoft Windows mouse: >
次のコマンドはマウスの振る舞いをMicrosoft Windowsのマウス方式に設定します。 >

	:behave mswin

UNIXシステムでのデフォルトのマウス方式は xterm です。一方、Microsoft Windows
システムでのデフォルトの方式はインストール中に選択できます。
JP注: 村岡版のデストリビューションではmswin形式になっているようです。
２つの振る舞いの詳細については|:behave|をご覧ください。以下では概要だけを説
明します。


XTERM 方式のマウスの振る舞い

左ボタンクリック		カーソルを移動
左ボタンドラッグ		visualモードで文字列を選択
中ボタンクリック		クリップボードから文字列をペースト
右ボタンクリック		マウスポインタが指す場所まで選択範囲を拡張


MSWIN 方式のマウスの振る舞い 

左マウスクリック		カーソルを移動
左マウスドラッグ		選択モードで文字列を選択(|09.4|をご覧ください)
左マウスクリック＋シフトキー	マウスポインタが指す場所まで選択範囲を拡張
中ボタンクリック		クリップボードから文字列をペースト
右ボタンクリック		ポップアップメニューを表示


マウスの動きはさらにチューンできます。マウスの動きを変更したければ、以下のオ
プションをチェックしてください。

	'mouse'			vimのどのモードでマウスを使うのかを指定
	'mousemodel'		マウスクリックした時に何に影響があるかを指定
	'mousetime'		ダブルクリックのクリック間隔
	'mousehide'		入力している間、マウスを隠すかどうかの指定
	'selectmode'		マウスでの選択がvisualモードか選択モードかの
				指定

==============================================================================
*09.3*	クリップボード

|04.7|の節ではクリップボードの基本的な使い方を説明しました。ここではX Window
での基本的なことについて説明します。X Windowではプログラム間で文字列をやり取
り用に２つの場所があります。MS-Windowにはこれはありません。

X Windowではカレントセレクション("current selection")と呼ばれます。これは現
在ハイライト表示されている文字列のことです。vimではこれはビジュアル範囲(vim
をデフォルトのオプション設定で使っている場合)と呼びます。この選択範囲は特に
何もせずに他のアプリケーションにペーストできます。
例えば、この文章のいくつかの単語をマウスで選んだとします。vimは自動的にvisual
モードになり、その文字列をハイライト表示します。ここで別のvimをファイル名な
しで起動します。当然ウィンドウ内は空っぽで表示されます。ここで中央ボタンをク
リックします。選択してあった文字列が挿入されます。

カレントセレクションは他の文字列を選択しない限りずっと残っています。他のgvim
にペーストした後に、そのウィンドウの数文字を選択します。この時、先程まで選択
してあった別ウィンドウのgvimでの単語の表示が違っていることに気付いたでしょう。
もはや、先程の選択範囲はカレントセレクションではないのです。

文字列の選択はマウスでなくても構いません。visualモード用のコマンドをキーボー
ドで入力しても同じことになります。


真のクリップボード
--------------------

さて、文字列のやり取り用のもう一つの方法についての番です。今までの説明との混
同を避けるために、ここでは真のクリップボード("real clipboard")と呼びます。
普通はカレントセレクションと真のクリップボードをいっしょにしてクリップボードと
呼んでいますが、ここでは真のクリップボードのことだけを指します。
真のクリップボードに文字列をプットするために、動作中のgvimのウィンドウの一つ
でいくつかの単語を選択し、メニューの[編集]-[コピー]コマンドを実行します。
これで文字列が真のクリップボードにコピーされました。クリップボードの内容は
それ用のアプリケーション(例えばKDEのklipper)がなければ見ることはできません。
さて、ここでもうひとつのgvimを選び、カーソルを適当なところに置いて、[編集]-
[貼り付け]コマンドを実行します。真のクリップボードから挿入された文字列が表
示されます。


両方を使う 
----------

このカレントセレクションと真のクリップボードの両方を使うことは混乱しそうに思
われるかも知れません。でもこれはとても便利なのです。例で説明しましょう。
テキストファイルをgvimを使って以下の処理を実行してみます。

-  ２つの単語をvisualモードで選択します。
-  [編集]-[コピー]コマンドを実行して単語をクリップボードに入れます。 
-  visualモードで別の１つの単語を選択します。
-  [編集]-[貼り付け]コマンドを実行します。この結果は選択している１つの単語が
   クリップボードにある２つの単語と入れ替わります。
-  マウスポインタを他のところに動かして中央ボタンを押します。クリップボードで
   上書きした単語がその場所に挿入されます。

カレントセレクションと真のクリップボードは気を付けて使いさえすれば、非常に役立
つテクニックとなります。


キーボードの利用
----------------

マウスを使うのが好きでなくても、カレントセレクションと真のクリップボードに、
２種類のレジスタを通してアクセスできます。 最初にレジスタ"*"はカレントセレ
クションを示します。
文字列をカレントセレクションにするにはvisualモードを使います。例えば行全体
を選択したければ"V"を使います。
カレントセレクションを現在のカーソル位置の前に挿入するなら、次のようにします。
>
	"*P

大文字の"P"であることに気を付けてください。小文字の"p"だと文字列をカーソルの
後ろにプットします。

次にレジスタ"+"は真のクリップボードを示します。例えばカーソル位置から行末ま
でを真のクリップボードにコピーするのであれば、次のようにします。 >

	"+y$

"y"はヤンク、つまりvimでのコピーコマンドのことでしたね。
真のクリップボードの内容をカーソルの前に挿入するには次のようにします。 >

	"+P

これはカレントセレクションの場合とほとんど同じですが、レジスタ"*"の代わりに
レジスタ"+"を使っています。

==============================================================================
*09.4*	選択モード

さて、これはX WindowよりもMS-Windowsでよく利用される機能です。ですがどちらのOS
でも利用可能です。Visualモードについては既に知っている通りです。選択モードは
Visualモードに似ています。というのはどちらも文字列を選択する時に使うものだから
です。しし、両者には明らかな違いがあります。文字列を入力している時、選択された
文字列は削除され、入力したものに置き換わります。

選択モードで作業を始めるには、最初にそれを有効にする必要があります。(MS-
Windows用ならば、多分、既に有効となっていますが、この方法でもできます。) >

	:set selectmode+=mouse

ここで、マウスを使って文字列を選択してみてください。visualモードの時のように
ハイライト表示となります。さらに何かの文字を入力してください。すると選択され
ていた文字列は削除され、入力した文字に置き換わります。この時、挿入モードに
なっており、続けて入力を行うことができます。

普通に文字を入力することで選択されている文字列を削除するため、通常の移動コ
マンドの"hjkl"や"w"などは使えません。その代わりシフト＋特殊キーが使えます。
<S-Left>（シフト＋左矢印キー)はカーソルを左に動かします。この時、選択された
文字列はvisualモードの時のように変化します。シフトキーと他の矢印キーの組み合
せも使えます。<S-End>と<S-Home>も使えます。

選択モードでの動きについては'selectmode'オプションでカスタマイズできます。

==============================================================================

Next chapter: |usr_10.txt|  大規摸な変更

Copyright: see |manual-copyright|  vim:tw=78:ts=8:ft=help:norl:
