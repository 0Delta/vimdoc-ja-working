COMMENT: モード別コマンドによる索引
STATUS: finished 5.7
TRANSLATOR: 小野尾隆一(nobi) <onoo@k-micro.com>
TRANSLATOR: nakadaira <hopper2@nanameue.jp>
MAINTEINER: 村岡太郎 <koron@tka.att.ne.jp>

*index.txt*	For Vim version 5.7.  Last change: 2000 Apr 01


		  VIM REFERENCE MANUAL	  by Bram Moolenaar


このファイルには、タグと短い説明とともに各モードにおける総てのコマンドのリスト
が記述されている。リストはアスキーコード順になっている。

ヒント: 機能で検索するときは、検索コマンドを使用する。例えば、何かを削除するコ
マンドを検索したいなら、"/削除"を使用する。

1. 挿入モード				|insert-index|
2. ノーマルモード			|normal-index|
   2.1. テキストオブジェクト		|objects|
   2.2. ウィンドウコマンド		|CTRL-W|
   2.3. 大括弧コマンド			|[|
   2.4. 'g' で始まるコマンド		|g|
3. ビジュアルモード			|visual-index|
4. コマンドライン編集			|ex-edit-index|
5. EX コマンド				|ex-cmd-index|

オプションの概略は help.txt を参照。|option-list|
各オプションの詳細な説明は options.txt を参照。|options|
全ヘルプ項目のリストは |help-tags| を参照。

==============================================================================
1. 挿入モード						*insert-index*

タグ		文字		動作	~
-----------------------------------------------------------------------
|i_CTRL-@|	CTRL-@		直前に挿入したテキストを挿入し、挿入モードを
				終了する。
|i_CTRL-A|	CTRL-A		直前に挿入したテキストを挿入する。
		CTRL-B		未使用 |i_CTRL-B-gone|
|i_CTRL-C|	CTRL-C		'insertmode' がセットされていなければ、略語を
				チェックせずに挿入モードを終了する。
|i_CTRL-D|	CTRL-D		現在の行から shiftwidth 分のインデントを削除
				する。
|i_CTRL-E|	CTRL-E		カーソルの下にある文字を挿入する。
		CTRL-F		未使用
		CTRL-G		将来の拡張のために予約。
|i_<BS>|	<BS>		カーソルの前にある文字を削除する。
|i_digraph|	{char1}<BS>{char2}
				2バイト文字を入力する。 ('digraph' オプション
				がセットされているとき)
|i_CTRL-H|	CTRL-H		<BS> と同じ
|i_<Tab>|	<Tab>		<Tab> 文字を挿入
|i_CTRL-I|	CTRL-I		<Tab> と同じ
|i_<NL>|	<NL>		<CR> と同じ
|i_CTRL-J|	CTRL-J		<CR> と同じ
|i_CTRL-K|	CTRL-K {char1} {char2}
				2バイト文字を入力する。
|i_CTRL-L|	CTRL-L		'insertmode' がセットされているとき: 挿入モー
				ドを終了する。
|i_<CR>|	<CR>		改行を入力。
|i_CTRL-M|	CTRL-M		<CR> と同じ。
|i_CTRL-N|	CTRL-N		カーソルの前にあるキーワードで前方検索し、一致
				した単語で補完する。
|i_CTRL-O|	CTRL-O		1回コマンドを実行し、挿入モードに戻る。
|i_CTRL-P|	CTRL-P		カーソルの前にあるキーワードで後方検索し、一致
				した単語で補完する。
|i_CTRL-Q|	CTRL-Q		CTRL-V と同じ。(端末制御に使用)
|i_CTRL-R|	CTRL-R {0-9a-z"%#*:=}
				レジスタに保存されている文字列を挿入。
|i_CTRL-R_CTRL-R| CTRL-R CTRL-R {0-9a-z"%#*:=}
				レジスタに保存されている文字列そのものを挿入。
|i_CTRL-R_CTRL-O| CTRL-R CTRL-O {0-9a-z"%#*:=}
				レジスタに保存されている文字列そのものを挿入。
				インデントは挿入しない。
|i_CTRL-R_CTRL-P| CTRL-R CTRL-P {0-9a-z"%#*:=}
				レジスタに保存されている文字列そのものを挿入。
				インデントは固定。
		CTRL-S		(端末制御に使用)
|i_CTRL-T|	CTRL-T		現在の行に shiftwidth 分のインデントを挿入する。
|i_CTRL-U|	CTRL-U		現在の行に挿入した総ての文字を削除する。
|i_CTRL-V|	CTRL-V {char}	次に入力する数字以外の文字を挿入する。
|i_CTRL-V_digit| CTRL-V {number} 次に入力する3桁の10進数を1バイト文字として挿入
				する。12345
|i_CTRL-W|	CTRL-W		カーソルの前にある単語を削除する。
|i_CTRL-X|	CTRL-X {mode}	CTRL-X サブモードに移行する。詳しくは下を参照。
|i_CTRL-Y|	CTRL-Y		カーソルの上にある文字を挿入する。
|i_CTRL-Z|	CTRL-Z		'insertmode' がセットされている場合: Vim をサ
				スペンドする。
|i_<Esc>|	<Esc>		挿入モードを終了する。('insertmode' がセットさ
				れていない場合)
|i_CTRL-[|	CTRL-[		<Esc> と同じ。
|i_CTRL-\_CTRL-N| CTRL-\ CTRL-N	 ノーマルモードへ移行。
		CTRL-\ a - z	将来の拡張のために予約。
		CTRL-\ others	未使用
|i_CTRL-]|	CTRL-]		trigger abbreviation
		CTRL-^		未使用
|i_CTRL-_|	CTRL-_		'allowrevins' がセットされている場合: 文字の挿
				入方向を逆転させる(右から左(Hebrew)、左から右
				(Farsi)) {コンパイル時に +rightleft オプション
				を有効にしたときのみ}
		<Space> to '~'	未使用。ただし CTRL-D が後に続く '0' と '^' は
				除く。

|i_0_CTRL-D|	0 CTRL-D	現在の行の全インデントを削除する。
|i_^_CTRL-D|	^ CTRL-D	現在の行の全インデントを削除し、次の行に復元。

|i_<Del>|	<Del>		カーソル位置の文字を削除。

		Meta characters (0x80 to 0xff, 128 to 255)
				未使用

|i_<Left>|	<Left>		カーソルを1文字左へ移動。
|i_<S-Left>|	<S-Left>	カーソルを1単語左へ移動。
|i_<C-Left>|	<C-Left>	カーソルを1単語左へ移動。
|i_<Right>|	<Right>		カーソルを1文字右へ移動。
|i_<S-Right>|	<S-Right>	カーソルを1単語右へ移動。
|i_<C-Right>|	<C-Right>	カーソルを1単語右へ移動。
|i_<Up>|	<Up>		カーソルを1行上へ移動。
|i_<S-Up>|	<S-Up>		<PageUp> と同じ。
|i_<Down>|	<Down>		カーソルを1行下へ移動。
|i_<S-Down>|	<S-Down>	<PageDown> と同じ。
|i_<Home>|	<Home>		カーソルを行の先頭へ移動。
|i_<C-Home>|	<C-Home>	カーソルを行の先頭へ移動。
|i_<End>|	<End>		カーソルを行末へ移動。
|i_<C-End>|	<C-End>		カーソルを行末へ移動。
|i_<PageUp>|	<PageUp>	1画面上へスクロール。
|i_<PageDown>|	<PageDown>	1画面下へスクロール。
|i_<F1>|	<F1>		<Help> と同じ。
|i_<Help>|	<Help>		挿入モードを終了し、ヘルプウィンドウを表示する。
|i_<Insert>|	<Insert>	挿入/上書きモードをトグルする。
|i_<LeftMouse>| <LeftMouse>	カーソルをマウスクリックした位置へ移動。
|i_<MouseDown>| <MouseDown>	ウィンドウを3行下へスクロール。
|i_<S-MouseDown>| <S-MouseDown> ウィンドウを1画面下ヘスクロール。
|i_<MouseUp>|	<MouseUp>	ウィンドウを3行上へスクロール。
|i_<S-MouseUp>| <S-MouseUp>	ウィンドウを1画面上へスクロール。

commands in CTRL-X submode

|i_CTRL-X_CTRL-D|	CTRL-X CTRL-D	定義済みの識別子を補完。
|i_CTRL-X_CTRL-E|	CTRL-X CTRL-E	ウィンドウを下へスクロール。
|i_CTRL-X_CTRL-F|	CTRL-X CTRL-F	ファイル名を補完。
|i_CTRL-X_CTRL-I|	CTRL-X CTRL-I	識別子を補完。
|i_CTRL-X_CTRL-K|	CTRL-X CTRL-K	辞書の識別子を補完。
|i_CTRL-X_CTRL-L|	CTRL-X CTRL-L	行全体を補完。
|i_CTRL-X_CTRL-L|	CTRL-X CTRL-N	次の補完候補。
|i_CTRL-X_CTRL-L|	CTRL-X CTRL-P	前の補完候補。
|i_CTRL-X_CTRL-Y|	CTRL-X CTRL-Y	ウィンドウを下へスクロール。
|i_CTRL-X_CTRL-]|	CTRL-X CTRL-]	タグを補完。
{コンパイル時に +insert_expand オプションを有効にしたときのみ利用可能}

==============================================================================
2. ノーマルモード					*normal-index*

CHAR	 空白以外の文字
WORD	 空白以外の文字からなる文字列
N	 コマンドの前に入力される数字
{motion} カーソル移動コマンド
Nmove	 {motion} でカーソルが通過するテキスト
SECTION	 もしかしたら '{' の代わりに '}' で始まる1段落

注: 1 = カーソル移動コマンド; 2 = アンドゥ/リドゥ可能

タグ		文字	       注  ノーマルモードでの動作	~
------------------------------------------------------------------------------
		CTRL-@		   未使用
|CTRL-A|	CTRL-A		2  カーソル位置/カーソルより後ろにある数字に N
				   を加える。
|CTRL-B|	CTRL-B		1  ウィンドウを N 画面上へスクロール。
|CTRL-C|	CTRL-C		   現在の(検索)コマンドを中断する。
|CTRL-D|	CTRL-D		   ウィンドウを N 行下へスクロールする。(デフォ
				   ルト:半画面)
|CTRL-E|	CTRL-E		   ウィンドウを N 行下へスクロールする。
|CTRL-F|	CTRL-F		1  ウィンドウを N 画面下へスクロール。
|CTRL-G|	CTRL-G		   現在のファイル名とカーソル位置を表示する。
|<BS>|		<BS>		1  "h" と同じ。
|CTRL-H|	CTRL-H		1  "h" と同じ。
|<Tab>|		<Tab>		1  N 個先のジャンプリストの場所へジャンプする。
|CTRL-I|	CTRL-I		1  <Tab> と同じ。
|<NL>|		<NL>		1  "j" と同じ。
|CTRL-J|	CTRL-J		1  "j" と同じ。
		CTRL-K		   未使用
|CTRL-L|	CTRL-L		   画面の再描画。
|<CR>|		<CR>		1  カーソルを N 行下の先頭の CHAR へ移動。
|CTRL-M|	CTRL-M>		1  <CR> と同じ。
|CTRL-N|	CTRL-N		1  "j" と同じ。
|CTRL-O|	CTRL-O		1  N 個前のジャンプリストの場所へジャンプする。
|CTRL-P|	CTRL-P		1  カーソルを N 行上へ移動。
		CTRL-Q		   (端末制御に使用)
|CTRL-R|	CTRL-R		2  'u' でアンドゥした変更をリドゥする。
		CTRL-S		   (端末制御に使用)
|CTRL-T|	CTRL-T		   N 個前のタグリストの場所へジャンプする。
|CTRL-U|	CTRL-U		   ウィンドウを N 行上へスクロール。(デフォル
				   トは半画面)
|CTRL-V|	CTRL-V		   ブロック指定のビジュアルモードを開始する。
|CTRL-W|	CTRL-W {char}	   ウィンドウコマンド、|CTRL-W| を参照。
|CTRL-X|	CTRL-X		2  カーソル位置/カーソルより後ろにある数字に N
				   を減じる。
|CTRL-Y|	CTRL-Y		   ウィンドウを N 行下へスクロール。
|CTRL-Z|	CTRL-Z		   Vim の実行を中断。(新しいシェルを開始する)
		CTRL-[ <Esc>	   未使用
|CTRL-\_CTRL-N| CTRL-\ CTRL-N	   ノーマルモードへ移行。(つまり何もしない)
		CTRL-\ a - z	   将来の拡張のために予約。
		CTRL-\ others	   未使用
|CTRL-]|	CTRL-]		   カーソル位置の単語を :ta で検索する。
|CTRL-^|	CTRL-^		   N 番目のファイルを編集する。(":e #N" と同じ)
		CTRL-_		   未使用

|<Space>|	<Space>		1  "l" と同じ。
|!|		!{motion}{filter}
				2  Nmove のテキストを {filter} コマンドでフィ
				   ルタする。
|!!|		!!{filter}	2  N 行を {filter} コマンドでフィルタする。
|quote|		"{a-zA-Z0-9.%#:-"}  削除、ヤンク、プットコマンドでバッファ
				   {a-zA-Z0-9.%#:-"} (大文字は既存のバッファに
				   追加する)を指定するために使用する。({.%#:}
				   はプットコマンドでのみ有効)
|#|		#		1  カーソル位置の単語で後方検索し、N 番目に見
				   つかった場所へ移動。
|$|		$		1  カーソルを N 行下の行末へ移動。
|%|		%		1  現在の行にある次の(小/大)括弧またはコメント
				   に対応する括弧の位置、対応するプリプロセッ
				   サの位置に移動。
|N%|		{count}%	1  ファイルの N パーセントの位置に移動。
|&|		&		2  最後に実行した :s コマンドを繰り返す。
|'|		'{a-zA-Z0-9}	1  {a-zA-Z0-9} でマークした行の先頭の CHAR へ
				   カーソルを移動。
|''|		''		1  最後のジャンプの前にいた行の先頭の CHAR へ
				   カーソルを移動。
|'<|		'<		1  カレントバッファのハイライト領域の先頭行の
				   先頭の CHAR へカーソルを移動。
|'>|		'>		1  カレントバッファのハイライト領域の最終行の
				   先頭の CHAR へカーソルを移動。
|'[|		'[		1  最後に編集したテキストまたは挿入したテキス
				   トの先頭行の先頭の CHAR へカーソルを移動。
|']|		']		1  最後に編集したテキストまたは挿入したテキス
				   トの末尾行の先頭の CHAR へカーソルを移動。
|(|		(		1  カーソルを N 文だけ戻す。
|)|		)		1  カーソルを N 文だけ先に進める。
|star|		*		1  カーソル位置の単語を前方検索し、N 番目に見
				   つかった位置へ移動。
|+|		+		1  カーソルを N 行下の先頭の CHAR へ移動。
|,|		,		1  最後に実行した f, t, F または T コマンドを
				   逆向きに N 回繰り返す。
|-|		-		1  カーソルを N 行上の先頭の CHAR へ移動。
|.|		.		2  最後の編集を N 回繰り返す。
|/|		/{pattern}<CR>	1  {pattern} で前方検索し、N 番目に見つかった
				   位置へ移動。
|/<CR>|		/<CR>		1  最後の検索の {pattern} で前方検索。
|count|		0		1  カーソルを行頭文字へ移動。
|count|		1		   カウントを指定するためにコマンドの前に入力
|count|		2			"
|count|		3			"
|count|		4			"
|count|		5			"
|count|		6			"
|count|		7			"
|count|		8			"
|count|		9			"
|:|		:		   Ex コマンドの入力開始。
|N:|		{count}:	   カレント行から N 行下の行までの範囲で有効と
				   なる Ex コマンドの入力開始。
|;|		;		1  最後の f, t, F または T を N 回繰り返す。
|<|		<{motion}	2  Nmove の行を 'shiftwidth' 分だけ左へシフト。
|<<|		<<		2  N 行を 'shiftwidth' 分だけ左へシフト。
|=|		={motion}	2  Nmove の行のインデントを調整する。
|==|		==		2  N 行のインデントを調整する。
|>|		>{motion}	2  Nmove の行を 'shiftwidth' 分だけ右へシフト。
|>>|		>>		2  N 行を 'shiftwidth' 分だけ右へシフト。
|?|		?{pattern}<CR>	1  {pattern} で後方検索し、N 番目に見つかった
				   位置へ移動。
|?<CR>|		?<CR>		1  最後の検索の {pattern} で後方検索。
|@|		@{a-z}		2  バッファ {a-z} の内容を N 回実行する。
|@:|		@:		   最後の ":" コマンドを N 回実行する。
|@@|		@@		2  最後の @{a-z} コマンドを N 回実行する。
|A|		A		2  行末に N 回テキストを追加する。
|B|		B		1  カーソルを N WORDS だけ戻す。
|C|		["x]C		2  カーソル位置から行末までと続く N-1 行のテキ
				   ストを削除し[バッファ x に保存して]、テキス
				   トを入力する; "c$" と同じ。
|D|		["x]D		2  カーソル位置から行末までと続く N-1 行のテキ
				   ストを削除する[バッファ x に保存する]; "d$"
				   と同じ。
|E|		E		1  カーソルを N 先の WORD の末尾へ移動。
|F|		F{char}		1  カーソルを左方向へ N 個目の {char} に移動。
|G|		G		1  カーソルを N 行目に移動、デフォルトは最後の
				   行。
|H|		H		1  カーソルを画面の上から N 行目に移動。
|I|		I		2  行の先頭の CHAR の前に N 回テキストを挿入。
|J|		J		2  N 行結合; デフォルトは2行。
|K|		K		   カーソル位置のキーワードを 'keywordprg' で
				   調べる。
|L|		L		1  カーソルを画面の下から N 行目に移動。
|M|		M		1  カーソルを画面の中央の行に移動。
|N|		N		1  最後に実行した '/' または '?' を逆方向に N
				   回実行する。
|O|		O		2  カーソルの上に新規に行を挿入し、テキストを
				   入力、N 回繰り返す。
|P|		["x]P		2  カーソルの前に[バッファ x の]テキストを N
				   回挿入する。
|Q|		Q		   "Ex" モードに移行する。
|R|		R		2  上書きモードに移行する: 今ある文字を上書き
				   する、入力したテキストを N-1 回繰り返す。
|S|		["x]S		2  N 行削除し[バッファ x に保存]、テキストの挿
				   入開始; "^cc" または "0cc" と同じ、オートイ
				   ンデントに依存。
|T|		T{char}		1  カーソルを左方向へ N 個目の {char} の直後ま
				   で移動。
|U|		U		2  1行中の最近の変更を総て取り消す。
|V|		V		   行指定のビジュアルモードを開始する。
|W|		W		1  カーソルを N WORDS 先に進める。
|X|		["x]X		2  カーソルの前にある N 文字を削除する[バッファ
				   x に保存]。
|Y|		["x]Y		   N 行[バッファ x に]ヤンクする; "yy" と同じ。
|ZZ|		ZZ		   カレントファイルが編集されていたら、保存し
				   て編集を終了する。
|ZQ|		ZQ		   カレントファイルの編集を終了する。
|[|		[{char}		   大括弧コマンド (下を参照)
		\		   未使用
|]|		]{char}		   大括弧コマンド (下を参照)
|^|		^		1  カーソルを行の先頭の CHAR へ移動。
|_|		_		1  カーソルを N-1 行下の先頭の CHAR へ移動。
|`|		`{a-zA-Z0-9}	1  カーソルをマーク {a-zA-Z0-9} へ移動。
|`<|		`<		1  カーソルをハイライト領域の先頭に移動。
|`>|		`>		1  カーソルをハイライト領域の末尾に移動。
|`[|		`[		1  最後に編集したテキストまたは挿入したテキス
				   トの先頭へカーソルを移動。
|`]|		`]		1  最後に編集したテキストまたは挿入したテキス
				   トの末尾へカーソルを移動。
|``|		``		1  最後のジャンプの前にいた位置へカーソルを移
				   動。
|a|		a		2  カーソルの直後に N 回テキストを追加する。
|b|		b		1  カーソルを N ワードだけ戻す。
|c|		["x]c{motion}	2  Nmove のテキストを削除[バッファ x に保存]し、
				   挿入モードへ移行。
|cc|		["x]cc		2  N 行削除[バッファ x に保存]し、挿入モードへ
				   移行。
|d|		["x]d{motion}	2  Nmove のテキストを削除[バッファ x に保存]。
|dd|		["x]dd		2  N 行削除[バッファ x に保存]。
|e|		e		1  カーソルを N 先のワードの末尾へ移動。
|f|		f{char}		1  カーソルを右方向へ N 個目の {char} に移動。
|g|		g{char}		   拡張コマンド、下を参照。
|h|		h		1  カーソルを左へ N 文字移動。
|i|		i		2  カーソルの直前に N 回テキストを挿入する。
|j|		j		1  カーソルを N 行下へ移動する。
|k|		k		1  カーソルを N 行上へ移動する。
|l|		l		1  カーソルを右へ N 文字移動。
|m|		m{A-Za-z}	   カーソル位置にマーク {A-Za-z} をセットする。
|n|		n		1  最後の '/' or '?' を N 回繰り返す。
|o|		o		2  カーソルの下に新規に行を挿入し、テキストを
				   入力、N 回繰り返す。
|p|		["x]p		2  カーソルの後に[バッファ x の]テキストを N
				   回挿入する。
|q|		q{0-9a-zA-Z"}	   入力した文字をレジスタ {0-9a-zA-Z"} (大文字
				   は既存のレジスタに追加する)に記録する。
|q|		q		   (記録中なら) レジスタへの記録を終了する。
|r|		r{char}		2  N 文字を {char} で置き換える。
|s|		["x]s		2  (置換) N 文字削除[バッファ x に保存]し、挿
				   入モードに移行。
|t|		t{char}		1  カーソルを右方向へ N 個目の {char} の直前ま
				   で移動。
|u|		u		2  変更をアンドゥ。
|v|		v		   文字指定のビジュアルモードを開始する。
|w|		w		1  カーソルを N ワード先へ移動。
|x|		["x]x		2  カーソル位置と直後の N 文字を削除[バッファ
				   x に保存]
|y|		["x]y{motion}	   Nmove のテキストを[バッファ x へ]ヤンク。
|yy|		["x]yy		   N 行[バッファ x へ]ヤンク。
|z<CR>|		z<CR>		   画面の再描画、カーソル行をウィンドウの最上
				   部へ移動、カーソルは行のはじめの空白文字以
				   外の文字へ移動。
|zN<CR>|	z{height}<CR>	   画面の再描画、ウィンドウの高さを {height}
				   にする。
|z+|		z+		   カーソルを N 行目に移動(デフォルトはウィン
				   ドウの下の行)、その他は "z<CR>" と同じ。
|z-|		z-		   画面の再描画、カーソル行をウィンドウの最下
				   部へ移動、カーソルは行のはじめの空白文字以
				   外の文字へ移動。
|z.|		z.		   画面の再描画、カーソル行をウィンドウの中央
				   部へ移動、カーソルは行のはじめの空白文字以
				   外の文字へ移動。
|z^|		z^		   カーソルを N 行目に移動(デフォルトはウィン
				   ドウの上の行)、その他は "z-" と同じ。
|zb|		zb		   画面の再描画、カーソル行をウィンドウの最下
				   部へ移動。
|ze|		ze		   'wrap' オプションがオフの時、カーソルがスク
				   リーンの右端になるように、水平方向にスクロー
				   ル。
|zh|		zh		   'wrap' オプションがオフの時、水平方向に N
				   文字分右へスクロール。
|zl|		zl		   'wrap' オプションがオフの時、水平方向に N
				   文字分左へスクロール。
|zs|		zs		   'wrap' オプションがオフの時、カーソルがスク
				   リーンの左端になるように、水平方向にスクロー
				   ル。
|zt|		zt		   画面の再描画、カーソル行をウィンドウの最上
				   部へ移動。
|zz|		zz		   画面の再描画、カーソル行をウィンドウの中央
				   部へ移動。
|z<Left>|	z<Left>		   "zh" と同じ。
|z<Right>|	z<Right>	   "zl" と同じ。
|{|		{		1  カーソルを N 段落戻す。
|bar|		|		1  カーソルを N カラムへ移動。
|}|		}		1  カーソルを N 段落進める。
|~|		~		2  'tildeop' オフ: カーソル位置の N 文字の大文
				   字小文字を逆転し、カーソルを右へ N 文字移動
				   する。
|~|		~{motion}	   'tildeop' オン: Nmove のテキストの大文字小
				   文字を逆転する。
|<C-End>|	<C-End>		1  "G" と同じ。
|<C-Home>|	<C-Home>	1  "gg" と同じ。
|<C-Left>|	<C-Left>	1  "b" と同じ。
|<C-Home>|	<C-Home>	2  "gg" と同じ。
|<C-Left>|	<C-Left>	2  "b" と同じ。
|<C-LeftMouse>| <C-LeftMouse>	   マウスクリック位置のキーワードで ":ta" を実
				   行する。
|<C-Right>|	<C-Right>	1  "w" と同じ。
|<C-RightMouse>| <C-RightMouse>	   "CTRL-T" と同じ。
|<Del>|		["x]<Del>	2  "x" と同じ。
|N<Del>|	{count}<Del>	   入力した {count} から最後の数字を削除する。
|<Down>|	<Down>		1  "j" と同じ。
|<End>|		<End>		1  "$" と同じ。
|<F1>|		<F1>		   <Help> と同じ。
|<Help>|	<Help>		   ヘルプウィンドウを開く。
|<Home>|	<Home>		1  "0" と同じ。
|<Insert>|	<Insert>	2  "i" と同じ。
|<Left>|	<Left>		1  "h" と同じ。
|<LeftMouse>|	<LeftMouse>	1  カーソルをマウスクリック位置へ移動。
|<MiddleMouse>| <MiddleMouse>	2  マウスクリック位置で実行した "P" と同じ。
|<PageDown>|	<PageDown>	   CTRL-F と同じ。
|<PageUp>|	<PageUp>	   CTRL-B と同じ。
|<Right>|	<Right>		1  "l" と同じ。
|<RightMouse>|	<RightMouse>	   ビジュアルモードを開始、カーソルをマウスク
				   リック位置へ移動。
|<S-Down>|	<S-Down>	1  CTRL-F と同じ。
|<S-Left>|	<S-Left>	1  "b" と同じ。
|<S-LeftMouse>| <S-LeftMouse>	   マウスクリック位置で実行した "*" と同じ。
|<S-Right>|	<S-Right>	1  "w" と同じ。
|<S-RightMouse>| <S-RightMouse>	   マウスクリック位置で実行した "#" と同じ。
|<S-Up>|	<S-Up>		1  CTRL-B と同じ。
|<Undo>|	<Undo>		2  "u" と同じ。
|<Up>|		<Up>		1  "k" と同じ。
|<MouseDown>|	<MouseDown>	   ウィンドウを3行下へスクロール。
|<S-MouseDown>| <S-MouseDown>	   ウィンドウを1画面下ヘスクロール。
|<MouseUp>|	<MouseUp>	   ウィンドウを3行上へスクロール。
|<S-MouseUp>|	<S-MouseUp>	   ウィンドウを1画面上へスクロール。

==============================================================================
2.1 テキストオブジェクト					*objects*

以下のコマンドは演算コマンドの後、もしくは、ビジュアルモードでオブジェクトを選
択する際に使われる。

タグ		コマンド	   ノーマルモードでの動作	~
------------------------------------------------------------------------------
|v_a(|		a(		   ab と同じ。
|v_a)|		a)		   ab と同じ。
|v_a<|		a<		   "a <>" '<' から '>' までを選択。
|v_a>|		a>		   a< と同じ。
|v_aB|		aB		   "a Block" "[{" から "]}" までを選択(括弧を
				   含む)。
|v_aW|		aW		   "a WORD" (ホワイトスペースを含む)
|v_a[|		a[		   "a []" '[' から ']' までを選択。
|v_a]|		a]		   a[ と同じ。
|v_ab|		ab		   "a block" "[(" から "])" までを選択(括弧を
				   含む)。
|v_ap|		ap		   "a paragraph" (ホワイトスペースを含む)
|v_as|		as		   "a sentence" (ホワイトスペースを含む)
|v_aw|		aw		   "a word" (ホワイトスペースを含む)
|v_a{|		a{		   aB と同じ。
|v_a}|		a}		   aB と同じ。
|v_i(|		i(		   ib と同じ。
|v_i)|		i)		   ib と同じ。
|v_i<|		i<		   "inner <>" '<' から '>' までを選択。
|v_i>|		i>		   i< と同じ。
|v_iB|		iB		   "inner Block" "[{" から "]}" までを選択。
|v_iW|		iW		   "inner WORD"
|v_i[|		i[		   "inner []" '[' から ']' までを選択。
|v_i]|		i]		   i[ と同じ。
|v_ib|		ib		   "inner block" "[(" から "])" までを選択。
|v_ip|		ip		   "inner paragraph"
|v_is|		is		   "inner sentence"
|v_iw|		iw		   "inner word"
|v_i{|		i{		   iB と同じ。
|v_i}|		i}		   iB と同じ。

==============================================================================
2.2 ウィンドウコマンド						*CTRL-W*

タグ		コマンド	   ノーマルモードでの動作	~
------------------------------------------------------------------------------
|CTRL-W_CTRL-B| CTRL-W CTRL-B	   "CTRL-W b" と同じ。
|CTRL-W_CTRL-C| CTRL-W CTRL-C	   "CTRL-W c" と同じ。
|CTRL-W_CTRL-D| CTRL-W CTRL-D	   "CTRL-W d" と同じ。
|CTRL-W_CTRL-F| CTRL-W CTRL-F	   "CTRL-W f" と同じ。
		CTRL-W CTRL-G	   "CTRL-W g .." と同じ。
|CTRL-W_CTRL-I| CTRL-W CTRL-I	   "CTRL-W i" と同じ。
|CTRL-W_CTRL-J| CTRL-W CTRL-J	   "CTRL-W j" と同じ。
|CTRL-W_CTRL-K| CTRL-W CTRL-K	   "CTRL-W k" と同じ。
|CTRL-W_CTRL-N| CTRL-W CTRL-N	   "CTRL-W n" と同じ。
|CTRL-W_CTRL-O| CTRL-W CTRL-O	   "CTRL-W o" と同じ。
|CTRL-W_CTRL-P| CTRL-W CTRL-P	   "CTRL-W p" と同じ。
|CTRL-W_CTRL-Q| CTRL-W CTRL-Q	   "CTRL-W q" と同じ。
|CTRL-W_CTRL-R| CTRL-W CTRL-R	   "CTRL-W r" と同じ。
|CTRL-W_CTRL-S| CTRL-W CTRL-S	   "CTRL-W s" と同じ。
|CTRL-W_CTRL-T| CTRL-W CTRL-T	   "CTRL-W t" と同じ。
|CTRL-W_CTRL-W| CTRL-W CTRL-W	   "CTRL-W w" と同じ。
|CTRL-W_CTRL-X| CTRL-W CTRL-X	   "CTRL-W x" と同じ。
|CTRL-W_CTRL-Z| CTRL-W CTRL-Z	   "CTRL-W z" と同じ。
|CTRL-W_CTRL-]| CTRL-W CTRL-]	   "CTRL-W ]" と同じ。
|CTRL-W_CTRL-^| CTRL-W CTRL-^	   "CTRL-W ^" と同じ。
|CTRL-W_CTRL-_| CTRL-W CTRL-_	   "CTRL-W _" と同じ。
|CTRL-W_+|	CTRL-W +	   カレントウィンドウの高さを N 行高くする。
|CTRL-W_-|	CTRL-W -	   カレントウィンドウの高さを N 行低くする。
|CTRL-W_=|	CTRL-W =	   総てのウィンドウの高さを同じにする。
|CTRL-W_R|	CTRL-W R	   ウィンドウ位置を上方へ N 回転させる。
|CTRL-W_S|	CTRL-W S	   "CTRL-W s" と同じ。
|CTRL-W_W|	CTRL-W W	   上から N 番目のウィンドウに移動。N の指定が
				   なければ、カレントウィンドウの上のウィンド
				   ウ(なければ一番下のウィンドウ)に移動。
|CTRL-W_]|	CTRL-W ]	   ウィンドウを分割してカーソル位置のタグへジャ
				   ンプする。
|CTRL-W_^|	CTRL-W ^	   カレントウィンドウを分割し、N 番目のファイ
				   ルを編集する。
|CTRL-W__|	CTRL-W _	   カレントウィンドウの高さを N 行にする(デフォ
				   ルトは可能な限り高く)。
|CTRL-W_b|	CTRL-W b	   一番下のウィンドウへ移動。
|CTRL-W_c|	CTRL-W c	   カレントウィンドウを閉じる(|:close| と同じ)。
|CTRL-W_d|	CTRL-W d	   ウィンドウを分割し、カーソル位置の定義へジャ
				   ンプする。
|CTRL-W_f|	CTRL-W f	   ウィンドウを分割し、カーソル位置のファイル
				   名のファイルを編集する。
|CTRL-W_g_CTRL-]| CTRL-W g CTRL-]  ウィンドウを分割し、カーソル位置のタグに対
				   し |:tjump| を実行する。
|CTRL-W_g]|	CTRL-W g ]	   ウィンドウを分割し、カーソル位置のタグに対
				   し |:tselect| を実行する。
|CTRL-W_g}|	CTRL-W g }	   カーソル位置のタグに対し |:ptjump| を実行す
				   る。
|CTRL-W_i|	CTRL-W i	   ウィンドウを分割し、カーソル位置の識別子の
				   宣言位置へジャンプする。
|CTRL-W_j|	CTRL-W j	   N 個下のウィンドウに移動(一番下のウィンドウ
				   でストップ)
|CTRL-W_k|	CTRL-W k	   N 個上のウィンドウに移動(一番上のウィンドウ
				   でストップ)
|CTRL-W_n|	CTRL-W n	   高さが N 行の新しいウィンドウを開く。
|CTRL-W_o|	CTRL-W o	   カレントウィンドウを除く総てのウィンドウを
				   閉じる(|:only| と同じ)。
|CTRL-W_p|	CTRL-W p	   直前の(最後にアクセスしていた)ウィンドウへ
				   移動。
|CTRL-W_q|	CTRL-W q	   カレントウィンドウを終了する(|:quit| と同
				   じ)。
|CTRL-W_r|	CTRL-W r	   ウィンドウ位置を下方へ N 回転させる。
|CTRL-W_s|	CTRL-W s	   カレントウィンドウを2つに分割し、高さが N
				   行の新しいウィンドウを作成する。
|CTRL-W_t|	CTRL-W t	   一番上のウィンドウへ移動。
|CTRL-W_w|	CTRL-W w	   下から N 番目のウィンドウに移動。N の指定が
				   なければ、カレントウィンドウの下のウィンド
				   ウ(なければ一番上のウィンドウ)に移動。
|CTRL-W_x|	CTRL-W x	   カレントウィンドウと上から N 番目のウィンド
				   ウ(デフォルトは1つ下のウィンドウ)を入れ替え
				   る。
|CTRL-W_z|	CTRL-W z	   プレビューウィンドウを閉じる。
|CTRL-W_}|	CTRL-W }	   カーソル位置のタグをプレビューウィンドウに
				   表示する。
|CTRL-W_<Down>| CTRL-W <Down>	   "CTRL-W j" と同じ。
|CTRL-W_<Up>|	CTRL-W <Up>	   "CTRL-W k" と同じ。

==============================================================================
2.3 大括弧コマンド						*[* *]*

タグ		文字	       注  ノーマルモードでの動作	~
------------------------------------------------------------------------------
|[_CTRL-D|	[_CTRL-D	   カーソル位置の単語と一致する #define の文を
				   カレントファイルの先頭からカレントファイル
				   とインクルードファイルの中を探し、最初に一
				   致した場所へジャンプする。
|[_CTRL-I|	[_CTRL-I	   カーソル位置の単語を含む行をカレントファイ
				   ルの先頭から探し、最初に見つかった行へジャ
				   ンプする。
|[#|		[#		1  後方へ対応のとれていない #if, #else, #ifdef
				   を探し、N 個目に見つかった場所へジャンプ。
|[(|		[(		1  後方へ対応のとれていない '(' を探し、N 個目
				   に見つかった場所へジャンプする。
|[star|		[*		1  "[/" と同じ。
|[/|		[/		1  後方へ C コメントの始まりを探し、N 個目に見
				   つかった場所へジャンプする。
|[D|		[D		   カーソル位置の単語にマッチする単語の定義を
				   カレントファイルとインクルードファイルの中
				   から検索しリスト表示する。カレントファイル
				   の先頭から検索を開始する。
|[I|		[I		   カーソル位置の単語にマッチする単語を含む行
				   をカレントファイルとインクルードファイルの
				   中から検索しリスト表示する。カレントファイ
				   ルの先頭から検索を開始する。
|[P|		[P		2  "[p" と同じ。
|[[|		[[		1  カーソルを N 段落後方へ移動
|[]|		[]		1  カーソルを N SECTIONS 後方へ移動
|[d|		[d		   カーソル位置の単語にマッチする単語の最初の
				   定義(#define)をカレントファイルとインクルー
				   ドファイルの中から検索し表示する。カレント
				   ファイルの先頭から検索を開始する。
|[f|		[f		   "gf" と同じ。
|[i|		[i		   カーソル位置の単語にマッチする単語を含む最
				   初に見つかった行をカレントファイルとインク
				   ルードファイルの中から検索しリスト表示する。
				   カレントファイルの先頭から検索を開始する。
|[p|		[p		2  "P" と同様、さらにカレントラインにインデン
				   トをあわせる
|[m|		[m		1  後方へ N 番目に現れた関数の先頭へカーソルを
				   移動。
|[{|		[{		1  後方へ N 番目に現れた対応する括弧のない '{'
				   へカーソルを移動。
|[<MiddleMouse> [<MiddleMouse>	2  "[p" と同じ。

|]_CTRL-D|	]_CTRL-D	   カーソル位置の単語にマッチする単語の最初の
				   定義(#define)をカレントファイルとインクルー
				   ドファイルの中から検索しジャンプする。カー
				   ソル位置から検索を開始する。
|]_CTRL-I|	]_CTRL-I	   カーソル位置の単語にマッチする単語を含む最
				   初に見つかった行をカレントファイルとインク
				   ルードファイルの中から検索しジャンプする。
				   カーソル位置から検索を開始する。
|]#|		]#		1  カーソルを N 先のマッチしていない #endif か
				   #else へ移動。
|])|		])		1  カーソルを N 先のマッチしていない ')' へ移動。
|]star|		]*		1  "]/" と同じ。
|]/|		]/		1  カーソルを N 先の C のコメントの最後へ移動。
|]D|		]D		   カーソル位置の単語にマッチする単語の定義
				   (#define)をカレントファイルとインクルードファ
				   イルの中から総てリストする。カーソル位置か
				   ら検索を開始する。
|]I|		]I		   カーソル位置の単語にマッチする単語を含む行
				   をカレントファイルとインクルードファイルの
				   中から総てリストする。カーソル位置から検索
				   を開始する。
|]P|		]P		2  "[p" と同じ。
|][|		][		1  カーソルを N SECTIONS 前方へ移動。
|]]|		]]		1  カーソルを N 段落前方へ移動。
|]d|		]d		   カーソル位置の単語にマッチする単語の最初の
				   定義(#define)をカレントファイルとインクルー
				   ドファイルの中から検索し表示する。カーソル
				   位置から検索を開始する。
|]f|		]f		   "gf" と同じ。
|]i|		]i		   カーソル位置の単語にマッチする単語を含む最
				   初に見つかった行をカレントファイルとインク
				   ルードファイルの中から検索しリスト表示する。
				   カーソル位置から検索を開始する。
|]p|		]p		2  "p" と同様、さらにカレントラインにインデン
				   トをあわせる
|]m|		]m		1  前方へ N 番目に現れた関数の末尾へカーソルを
				   移動。
|]}|		]}		1  カーソルを N 先のマッチしていない '}' へ移
				   動。
|]<MiddleMouse> ]<MiddleMouse>	2  "]p" と同じ。

==============================================================================
2.4 'g' で始まるコマンド						*g*

タグ		文字	      注   ノーマルモードでの動作	~
------------------------------------------------------------------------------
|g_CTRL-A|	g_CTRL-A	   only when compiled with MEM_PROFILE
				   defined: dump a memory profile
|g_CTRL-G|	g_CTRL-G	   現在のカーソル位置に関する情報を表示。
|g_CTRL-H|	g_CTRL-H	   ブロック選択モードの開始。
|g_CTRL-]|	g_CTRL-]	   カーソル位置のタグへ |:tjump| する。
|g#|		g#		1  "#" と同様、ただし "\<" と "\>" を使用しな
				   い。
|g$|		g$		1  'wrap' がオフの時、カレント行の画面に表示さ
				   れている右端の文字へ移動。
				   'wrap' がオフの時、カレントスクリーン行の右
				   端の文字へ移動。
|gstar|		g*		1  "*" と同様、ただし "\<" と "\>" を使用しな
				   い。
|g0|		g0		1  'wrap' がオフの時、カレント行の画面に表示さ
				   れている左端の文字へ移動。
				   'wrap' がオフの時、カレントスクリーン行の左
				   端の文字へ移動。
|g?|		g?		2  Rot13 エンコード演算子。
|g?g?|		g??		2  カレント行を Rot13 エンコード。
|g?g?|		g?g?		2  カレント行を Rot13 エンコード。
|gD|		gD		1  カーソル位置の単語の定義をカレントファイル
				   内で検索し、移動。
|gE|		gE		1  直前の WORD の末尾に移動。
|gH|		gH		   行選択モードの開始。
|gI|		gI		2  "I" と同様、ただし1カラム目より挿入開始。
|gJ|		gJ		2  スペースを挿入せずに行を連結。
|gP|		["x]gP		2  (レジスタ x からの)テキストをカーソルの前に
				   挿入、カーソルは挿入テキストの最後へ移動。
|gR|		gR		2  仮想置換モード開始。
|gU|		gU{motion}	2  Nmove テキストを大文字にする。
|gV|		gV		   don't reselect the previous Visual area
				   when executing a mapping or menu in Select
				   mode
|g]|		g]		   カーソル位置の単語をタグとして :tselect
				   を実行する
|g^|		g^		1  'wrap' オプションがオフの時、スクリーン上に
				   あるカレント行のもっとも左のホワイトスペー
				   ス以外の文字へ移動
				   'wrap' オプションがオンの時、スクリーン表
				   示でのカレント行のもっとも左のホワイトスペー
				   ス以外の文字へ移動
|ga|		ga		   カーソル位置の文字の ASCII コード値を表示
|gd|		gd		1  カーソル位置の単語の定義を現在の関数内で探
				   し、移動
|ge|		ge		1  直前の単語の末尾に移動
|gf|		gf		   カーソル位置のファイル名のファイルを編集開
				   始
|gg|		gg		1  N 行目へジャンプ、デフォルトは1行目
|gh|		gh		   セレクトモードの開始
|gj|		gj		1  "j" と同様、ただし 'wrap' がオンの時はスク
				   リーン行で N 行下へ移動
|gk|		gk		1  "k" と同様、ただし 'wrap' がオンの時はスク
				   リーン行で N 行上へ移動
|gm|		gm		1  スクリーン行の中央の文字へジャンプ
|go|		go		1  バッファ中の N バイト目へジャンプ
|gp|		["x]gp		2  N 回カーソルの後に(レジスタxの)テキストを挿
				   入、カーソルは挿入テキストの直後へ移動
|gq|		gq{motion}	2  Nmove テキストを整形する
|gr|		gr{char}	2  N 文字を {char} で仮想上書きする
|gs|		gs		   N 秒間スリープする(デフォルト1秒)
|gu|		gu{motion}	2  Nmove テキストを小文字にする
|gv|		gv		   前回のビジュアル領域を再選択する
|g~|		g~{motion}	2  Nmove テキストの大文字、小文字を変換する
|g<Down>|	g<Down>		1  "gj" と同じ。
|g<End>|	g<End>		1  "g$" と同じ。
|g<Home>|	g<Home>		1  "g0" と同じ。
|g<LeftMouse>|	g<LeftMouse>	   <C-LeftMouse> と同じ。
		g<MiddleMouse>	   <C-MiddleMouse> と同じ。
|g<RightMouse>| g<RightMouse>	   <C-RightMouse> と同じ。
|g<Up>|		g<Up>		1  "gk" と同じ。

==============================================================================
3. ビジュアルモード					*visual-index*

ビジュアルモードでのほとんどのコマンドは、ノーマルモードと同じ。ノーマルモード
と異なるコマンドのみここに列挙した。

タグ		コマンド       注  ビジュアルモードでの動作	~
------------------------------------------------------------------------------
|v_CTRL-\_CTRL-N| CTRL-\ CTRL-N	   ビジュアルモードの停止
|v_CTRL-G|	CTRL-G		   ビジュアルモードとセレクトモードをトグル
|v_<BS>|	<BS>		2  セレクトモード: ハイライト領域を削除
|v_CTRL-H|	CTRL-H		2  <BS> と同じ。
|v_CTRL-O|	CTRL-O		   セレクトモードからビジュアルモードへ1キーで
				   移行
|v_CTRL-V|	CTRL-V		   ビジュアルモードをブロック指向にする。もし
				   くはブロック指向であれば、ビジュアルモード
				   を終了する
|v_CTRL-]|	CTRL-]		   ハイライトされたタグへジャンプ
|v_!|		!{filter}	2  ハイライトされた行を外部コマンド {filter}
				   でフィルタする
|v_:|		:		   ハイライトされた行を対象範囲として、コマン
				   ドラインのコマンドを適用する
|v_<|		<		2  ハイライトされた行を 'shiftwidth' 分だけ左
				   へシフト
|v_=|		=		2  'equalprg' で設定されている外部プログラムで
				   ハイライト行をフィルタする
|v_>|		>		2  ハイライトされた行を 'shiftwidth' 分だけ右
				   へシフト
|v_b_A|		A		2  ブロックモードの時: ハイライトされた総ての
				   行に対し、ハイライト領域の後に同じテキスト
				   を追加
|v_C|		C		2  ハイライトされた行を削除して、挿入開始
|v_D|		D		2  ハイライトされた行を削除
|v_b_I|		I		2  ブロックモードの時: ハイライトされた総ての
				   行に対し、ハイライト領域の前に同じテキスト
				   を挿入
|v_J|		J		2  ハイライトされた行を連結
|v_K|		K		   ハイライト領域に対し 'keywordprg' を実行
|v_O|		O		   カーソルをハイライト領域の水平方向のもう一
				   方のコーナーに移動する
		Q		   Ex モードに移行しない
|v_R|		R		2  ハイライトされた行を削除し、挿入を開始
|v_S|		S		2  ハイライトされた行を削除し、挿入を開始
|v_U|		U		2  ハイライト領域の文字を大文字にする
|v_V|		V		   ビジュアルモードを行指向にする。もしくは行
				   指向であれば、ビジュアルモードを終了する
|v_X|		X		2  ハイライトされた行を削除
|v_Y|		Y		   ハイライトされた行をヤンク
|v_a(|		a(		   ab と同じ。
|v_a)|		a)		   ab と同じ。
|v_a<|		a<		   ハイライト領域を < と > で囲まれた領域に拡
				   大する。
|v_a>|		a>		   a< と同じ。
|v_aB|		aB		   ハイライト領域を { と } で囲まれた領域に拡
				   大する。
|v_aW|		aW		   extend highlighted area with "a WORD"
|v_a[|		a[		   ハイライト領域を [ と ] で囲まれた領域に拡
				   大する。
|v_a]|		a]		   a[ と同じ。
|v_ab|		ab		   ハイライト領域を ( と ) で囲まれた領域に拡
				   大する。
|v_ap|		ap		   ハイライト領域を1段落に拡大する。
|v_as|		as		   ハイライト領域を1文に拡大する。
|v_aw|		aw		   extend highlighted area with "a word"
|v_a{|		a{		   aB と同じ。
|v_a}|		a}		   aB と同じ。
|v_c|		c		2  ハイライト領域を削除し、挿入開始
|v_d|		d		2  ハイライト領域を削除
|v_gJ|		gJ		2  ハイライトされた行をスペースを挿入せずに連
				   結
|v_gq|		gq		2  ハイライトされた行を整形する
|v_gv|		gv		   現在のハイライト領域と直前のハイライト領域
				   を入れ替える
|v_i(|		i(		   ib と同じ。
|v_i)|		i)		   ib と同じ。
|v_i<|		i<		   ハイライト領域を < と > で囲まれた内側の領
				   域に拡大する。
|v_i>|		i>		   i< と同じ。
|v_iB|		iB		   ハイライト領域を { と } で囲まれた内側の領
				   域に拡大する。
|v_iW|		iW		   extend highlighted area with "inner WORD"
|v_i[|		i[		   ハイライト領域を [ と ] で囲まれた内側の領
				   域に拡大する。
|v_i]|		i]		   i[ と同じ。
|v_ib|		ib		   ハイライト領域を ( と ) で囲まれた内側の領
				   域に拡大する。
|v_ip|		ip		   ハイライト領域を段落の内側の領域に拡大する。
|v_is|		is		   ハイライト領域を文の内側の領域に拡大する。
|v_iw|		iw		   extend highlighted area with "inner word"
|v_i{|		i{		   iB と同じ。
|v_i}|		i}		   iB と同じ。
|v_o|		o		   カーソルをハイライト領域の対角方向のもう一
				   方のコーナーに移動する
|v_r|		r		2  ハイライト領域を削除し、挿入開始
|v_s|		s		2  ハイライト領域を削除し、挿入開始
|v_u|		u		2  ハイライト領域の文字を小文字にする。
|v_v|		v		   ビジュアルモードを文字指向とする。もしくは
				   文字指向ならばビジュアルモードを終了する。
|v_x|		x		2  ハイライト領域を削除
|v_y|		y		   ハイライト領域をヤンク
|v_~|		~		2  ハイライト領域の文字の大文字小文字を変換

==============================================================================
4. コマンドライン編集					*ex-edit-index*

':' や '!', '/', '?' コマンドでコマンドライン入力となる。
通常の文字はカーソル位置に挿入される。
以下の説明にある「補完」は、前後関係に依存した補完を行なう。つまり、ファイル名
やタグ、コマンド等適切な補完が行なわれる。

		CTRL-@		未使用
|c_CTRL-A|	CTRL-A		カーソルより前のパタンで補完を行い、総ての候補
				を挿入
|c_CTRL-B|	CTRL-B		カーソルをコマンドラインの先頭へ移動
|c_CTRL-C|	CTRL-C		<ESC> と同じ。
|c_CTRL-D|	CTRL-D		カーソルより前のパタンに一致する補完候補をリス
				ト表示
|c_CTRL-E|	CTRL-E		カーソルをコマンドラインの末尾へ移動
		CTRL-F		未使用
		CTRL-G		未使用
|c_<BS>|	<BS>		カーソルの直前の文字を削除
|c_digraph|	{char1} <BS> {char2}
				'digraph' がオンの時、2バイト文字を入力する
|c_CTRL-H|	CTRL-H		<BS> と同じ。
|c_<Tab>|	<Tab>		'wildchar' が <Tab> の時: カーソルの前のパタンで
				補完を行なう
|c_<S-Tab>|	<S-Tab>		CTRL-P と同じ。
|c_wildchar|	'wildchar'	カーソルの前のパタンで補完を行なう (デフォルト:
				<Tab>)
|c_CTRL-I|	CTRL-I		<Tab> と同じ。
|c_<NL>|	<NL>		<CR> と同じ。
|c_CTRL-J|	CTRL-J		<CR> と同じ。
|c_CTRL-K|	CTRL-K {char1} {char2}
				2バイト文字を入力
|c_CTRL-L|	CTRL-L		カーソルの前のパタンで補完を行ない、最長一致部
				分までを挿入
|c_<CR>|	<CR>		入力したコマンドを実行
|c_<CR>|	CTRL-M		<CR> と同じ。
|c_CTRL-N|	CTRL-N		'wildchar' を使用して複数の補完候補があるとき:
				次の補完候補を表示
				その他: <Down> と同じ
		CTRL-O		未使用
|c_CTRL-P|	CTRL-P		'wildchar' を使用して複数の補完候補があるとき:
				前の補完候補を表示
				その他: <Up> と同じ
|c_CTRL-Q|	CTRL-Q		CTRL-V と同じ (端末制御で使用)
|c_CTRL-R|	CTRL-R {0-9a-z"%#*:= CTRL-F CTRL-P CTRL-W CTRL-A}
				カーソル位置のオブジェクトまたはレジスタの内容
				をキー入力したかのように挿入
|c_CTRL-R_CTRL-R| CTRL-R CTRL-R {0-9a-z"%#*:= CTRL-F CTRL-P CTRL-W CTRL-A}
				カーソル位置のオブジェクトまたはレジスタの内容
				を文字通りに挿入
		CTRL-S		(端末制御に使用)
|c_CTRL-U|	CTRL-U		総ての文字を削除
|c_CTRL-V|	CTRL-V		続いて入力される数字以外の文字を文字通りに挿入、
				もしくは3桁の十進数を1バイト文字として挿入
|c_CTRL-W|	CTRL-W		カーソルより前にある単語を削除
		CTRL-X		未使用 (補完機能のために予約)
		CTRL-Y		未使用
		CTRL-Z		未使用 (サスペンド機能のために予約)
|c_<Esc>|	<Esc>		コマンドラインを実行せずに破棄する
|c_<Esc>|	CTRL-[		<Esc> と同じ。
|c_CTRL-\_CTRL-N| CTRL-\ CTRL-N コマンドラインを破棄して、ノーマルモードへ移行
		CTRL-\ a - z	将来の拡張のために予約
		CTRL-\ others	未使用
		CTRL-]		未使用
		CTRL-^		未使用
|c_CTRL-_|	CTRL-_		'allowrevins' がセットされている場合: 入力方式
				を変更 (Hebrew:右から左、Farsi:左から右)
|c_<Del>|	<Del>		カーソル位置の文字を削除
|c_<Left>|	<Left>		カーソルを左へ移動
|c_<S-Left>|	<S-Left>	カーソルを1単語左へ移動
|c_<C-Left>|	<C-Left>	カーソルを1単語左へ移動
|c_<Right>|	<Right>		カーソルを右へ移動
|c_<S-Right>|	<S-Right>	カーソルを1単語右へ移動
|c_<C-Right>|	<C-Right>	カーソルを1単語右へ移動
|c_<Up>|	<Up>		ヒストリの中でカーソルより前のパタンに一致する
				1つ前のコマンドラインを呼び出す
|c_<S-Up>|	<S-Up>		ヒストリから1つ前のコマンドラインを呼び出す
|c_<Down>|	<Down>		ヒストリの中でカーソルより前のパタンに一致する
				1つ次のコマンドラインを呼び出す
|c_<S-Down>|	<S-Down>	ヒストリから1つ次のコマンドラインを呼び出す
|c_<Home>|	<Home>		カーソルをコマンドラインの先頭へ移動
|c_<End>|	<End>		カーソルをコマンドラインの末尾へ移動
|c_<PageDown>|	<PageDown>	<S-Down> と同じ。
|c_<PageUp>|	<PageUp>	<S-Up> と同じ。
|c_<Insert>|	<Insert>	挿入モード/上書きモードを変更
|c_<LeftMouse>| <LeftMouse>	カーソルをマウスクリック位置へ移動

==============================================================================
5. EX コマンド						*ex-cmd-index*

以下に簡単ではあるが総ての ":" コマンドを列挙し説明した。ただし、引数についての
説明はしていない。コマンド名で省略可能な部分を [] で囲った。コマンドはコマンド
名のうち省略できない部分を対象としてソートをした。

|:!|		:!		行をフィルタにかける、または、外部コマンドを実
				行する
|:!!|		:!!		最後に実行した ":!" コマンドを繰り返す
|:#|		:#		":number" と同じ。
|:&|		:&		最後に実行した ":substitute" を繰り返す
|:star|		:*		レジスタの内容を実行する
|:<|		:<		'shiftwidth' 1つ分だけ行を左へシフト
|:=|		:=		カーソルのある行の行番号を表示
|:>|		:>		'shiftwidth' 1つ分だけ行を右へシフト
|:@|		:@		レジスタの内容を実行
|:@@|		:@@		直前の ":@" を繰り返す
|:Next|		:N[ext]		引数リス途中の1つ前のファイルを編集
|:Print|	:P[rint]	行を表示する
|:X|		:X		ask for encryption key
|:append|	:a[ppend]	テキストを追加する
|:abbreviate|	:ab[breviate]	enter abbreviation
|:abclear|	:abc[lear]	remove all abbreviations
|:all|		:al[l]		引数リストの全ファイルをウィンドウ作成して表示
|:amenu|	:am[enu]	総てのモードに対してメニュー項目を追加
|:anoremenu|	:an[oremenu]	総てのモードに対してリマップされないメニュー項
				目を追加
|:args|		:ar[gs]		引数リストを表示
|:argument|	:argu[ment]	引数リスト中の特定のファイルを編集
|:ascii|	:as[cii]	カーソル位置の文字のアスキーコードを表示
|:autocmd|	:au[tocmd]	オートコマンドの入力と表示
|:augroup|	:aug[roup]	使用するオートコマンドグループの選択と表示
|:aunmenu|	:aun[menu]	総てのモードに対してメニュー項目を削除
|:buffer|	:b[uffer]	バッファリス途中の特定のバッファを編集
|:bNext|	:bN[ext]	バッファリスト中の次のバッファを編集
|:ball|		:ba[ll]		バッファリスト中の各ファイルに対しウィンドウを
				作成して表示
|:badd|		:bad[d]		バッファリストにファイルを追加
|:bdelete|	:bd[elete]	バッファリストから特定のファイルを削除
|:behave|	:be[have]	set mouse and selection behavior
				目を追加
|:blast|	:bl[ast]	バッファリスト中の最後のバッファを編集
|:bmodified|	:bm[odified]	バッファリスト中の次の編集中のファイルを編集
|:bnext|	:bn[ext]	バッファリスト中の次のバッファを編集
|:bprevious|	:bp[revious]	バッファリスト中の前のバッファを編集
|:brewind|	:br[ewind]	バッファリスト中の先頭のバッファを編集
|:break|	:brea[k]	while ループを抜ける
|:browse|	:bro[wse]	ファイル選択ダイアログをポップアップする
|:buffers|	:buffers	バッファリストのファイル名をリスト表示
|:bunload|	:bun[load]	指定のバッファをアンロード
|:change|	:c[hange]	1行または連続する複数行を上書きする
|:cNext|	:cN[ext]	直前のエラーへジャンプ
|:cabbrev|	:ca[bbrev]	コマンドラインモードを対象とする ":abbreviate"
				コマンド
|:cabclear|	:cabc[lear]	コマンドラインモードにおける総ての
				abbrebiation を削除
|:call|		:cal[l]		関数をコール
|:cc|		:cc		指定のエラーへジャンプ
|:cd|		:cd		ディレクトリの移動
|:center|	:ce[nter]	行を中央寄せに整形
|:cfile|	:cf[ile]	read the file with error messages
|:change|	:ch[ange]	行を削除し、テキストを挿入
|:chdir|	:chd[ir]	ディレクトリの移動
|:checkpath|	:che[ckpath]	インクルードファイルをリスト表示
|:clist|	:cl[ist]	総てのエラーをリスト表示
|:clast|	:cla[st]	指定のエラーへジャンプ、デフォルトは最後のエラー
|:close|	:clo[se]	カレントウィンドウを閉じる
|:cmap|		:cm[ap]		コマンドラインモードを対象とする ":map" コマン
				ド
|:cmapclear|	:cmapc[lear]	コマンドラインモードの総てのマッピングを削除
|:cmenu|	:cme[nu]	コマンドラインモードのメニューを追加
|:cnext|	:cn[ext]	次のエラーへジャンプ
|:cnewer|	:cnew[er]	go to newer error list
|:cnfile|	:cnf[ile]	次のファイルの先頭エラーへジャンプ
|:cnoremap|	:cno[remap]	コマンドラインモードを対象とする ":noremap" コ
				マンド
|:cnoreabbrev|	:cnorea[bbrev]	コマンドラインモードを対象とする ":noreabbrev"
				コマンド
|:cnoremenu|	:cnoreme[nu]	コマンドラインモードを対象とする ":noremenu"
				コマンド
|:copy|		:co[py]		行のコピー
|:colder|	:col[der]	go to older error list
|:command|	:com[mand]	ユーザ定義コマンドの作成
|:comclear|	:comc[lear]	総てのユーザ定義コマンドの削除
|:continue|	:con[tinue]	:while に戻って実行を続ける
|:confirm|	:conf[irm]	prompt user when confirmation required
|:cprevious|	:cp[revious]	直前のエラーへジャンプ
|:cquit|	:cq[uit]	quit Vim with an error code
|:crewind|	:cr[ewind]	指定のエラーへジャンプ、デフォルトは先頭のエラー
|:cscope|	:cs[cope]	cscope コマンドを実行
|:cstag|	:cst[ag]	use cscope to jump to a tag
|:cunmap|	:cu[nmap]	コマンドラインモードを対象とする ":unmap" コマ
				ンド
|:cunabbrev|	:cuna[bbrev]	コマンドラインモードを対象とする ":unabbrev"
				コマンド
|:cunmenu|	:cunme[nu]	コマンドラインモードのメニューを削除
|:delete|	:d[elete]	行を削除
|:delcommand|	:delc[ommand]	ユーザ定義コマンドの削除
|:delfunction|	:delf[unction]	ユーザ定義ファンクションの削除
|:display|	:di[splay]	レジスタの内容を表示
|:digraphs|	:dig[raphs]	2バイト文字の入力または表示
|:djump|	:dj[ump]	#define へジャンプ
|:dlist|	:dl[ist]	#define をリスト表示
|:doautocmd|	:do[autocmd]	カレントバッファに対しオートコマンドを適用する
|:doautoall|	:doautoa[ll]	ロードされているバッファ総てにオートコマンドを
				適用する
|:dsearch|	:ds[earch]	list one #define
|:dsplit|	:dsp[lit]	ウィンドウを分割し #define へジャンプ
|:edit|		:e[dit]		ファイルの編集
|:echo|		:ec[ho]		式の結果を表示する
|:echohl|	:echoh[l]	set highlighting for echo commands
|:echon|	:echon		:echo と同じ、ただし <EOL> を表示しない
|:else|		:el[se]		:if コマンドと一緒に使用する
|:elseif|	:elsei[f]	:if コマンドと一緒に使用する
|:emenu|	:em[enu]	名前でメニューを実行
|:endif|	:en[dif]	直前の :if の終了
|:endfunction|	:endf[unction]	ユーザファンクションの終了
|:endwhile|	:endw[hile]	直前の :while の終了
|:ex|		:ex		":edit" と同じ。
|:execute|	:exe[cute]	式の結果を実行する
|:exit|		:exi[t]		":xit" と同じ。
|:file|		:f[ile]		カレントファイル名の設定または表示
|:files|	:files		バッファリスト中の全ファイルをリスト表示
|:filetype|	:filet[ype]	ファイルタイプ検出の on/off 切換
|:find|		:fin[d]		'path' の中からファイルを検索し、編集する
|:fixdel|	:fix[del]	<Del> のキーコードを設定
|:function|	:fu[nction]	ユーザファンクションを定義
|:global|	:g[lobal]	execute commands for matching lines
|:goto|		:go[to]		バッファ内の指定したバイト数の場所へジャンプ
|:grep|		:gr[ep]		'grepprg' を実行し、最初にマッチした位置へジャ
				ンプ
|:gui|		:gu[i]		GUI をスタートする
|:gvim|		:gv[im]		GUI をスタートする
|:help|		:h[elp]		ヘルプウィンドウを表示
|:helpfind|	:helpf[ind]	ヘルプのキーワードを入力するためのダイアログを
				ポップアップする
|:highlight|	:hi[ghlight]	ハイライトルールを指定する
|:hide|		:hid[e]		hide current buffer for a command
|:history|	:his[tory]	コマンドのヒストリを表示
|:insert|	:i[nsert]	テキストを挿入
|:iabbrev|	:ia[bbrev]	挿入モードを対象とする ":abbrev" コマンド
|:iabclear|	:iabc[lear]	挿入モードを対象とする ":abclear" コマンド
|:if|		:if		条件が成立した場合にコマンド群を実行
|:ijump|	:ij[ump]	識別子の定義へジャンプ
|:ilist|	:il[ist]	識別子に一致した総ての行をリスト表示
|:imap|		:im[ap]		挿入モードを対象とした ":map" コマンド
|:imapclear|	:imapc[lear]	挿入モードを対象とした ":mapclear" コマンド
|:imenu|	:ime[nu]	挿入モードを対象にメニュー追加
|:inoremap|	:ino[remap]	挿入モードを対象とした ":noremap" コマンド
|:inoreabbrev|	:inorea[bbrev]	挿入モードを対象とした ":noreabbrev" コマンド
|:inoremenu|	:inoreme[nu]	挿入モードを対象とした ":noremenu" コマンド
|:intro|	:int[ro]	起動直後のメッセージを表示
|:isearch|	:is[earch]	識別子と一致した最初の行を表示
|:isplit|	:isp[lit]	ウィンドウを分割し、識別子の定義へジャンプ
|:iunmap|	:iu[nmap]	挿入モードを対象とした ":unmap" コマンド
|:iunabbrev|	:iuna[bbrev]	挿入モードを対象とした ":unabbrev" コマンド
|:iunmenu|	:iunme[nu]	挿入モードを対象にメニュー削除
|:join|		:j[oin]		行の結合
|:jumps|	:ju[mps]	ジャンプリストの表示
|:k|		:k		マークを設定
|:list|		:l[ist]		行を表示
|:last|		:la[st]		引数リスト中の最後のファイルを編集
|:left|		:le[ft]		行を左寄せ
|:let|		:let		変数またはオプションに値を設定する
|:ls|		:ls		総てのバッファを表示
|:move|		:m[ove]		行を移動する
|:mark|		:ma[rk]		マークを設定
|:make|		:mak[e]		execute external command 'makeprg' and parse
				error messages
|:map|		:map		マッピングの設定または表示
|:mapclear|	:mapc[lear]	ノーマルモードとビジュアルモードを対象にマッピ
				ングをクリア
|:marks|	:marks		総てのマークを表示
|:menu|		:me[nu]		新しいメニュー項目を追加
|:messages|	:mes[sages]	直前に表示されたメッセージの表示
|:mkexrc|	:mk[exrc]	現在のマッピングと設定をファイルに書き出す
|:mksession|	:mks[ession]	session情報をファイルに書き出す
|:mkvimrc|	:mkv[imrc]	現在のマッピングと設定をファイルに書き出す
|:mode|		:mod[e]		スクリーンモードを表示または変更する
|:next|		:n[ext]		引数リスト中の次のファイルを読み込む
|:new|		:new		新規に空のウィンドウを作成する
|:nmap|		:nm[ap]		ノーマルモードを対象とする ":map" コマンド
|:nmapclear|	:nmapc[lear]	ノーマルモードの総てのマッピングを消去する
|:nmenu|	:nme[nu]	ノーマルモードのメニューを追加する
|:nnoremap|	:nn[oremap]	ノーマルモードを対象とする ":noremap" コマンド
|:nnoremenu|	:nnoreme[nu]	ノーマルモードを対象とする ":noremenu" コマン
				ド
|:noremap|	:no[remap]	enter a mapping that will not be remapped
|:nohlsearch|	:noh[lsearch]	suspend 'hlsearch' highlighting
|:noreabbrev|	:norea[bbrev]	enter an abbreviation that will not be
				remapped
|:noremenu|	:noreme[nu]	enter a menu that will not be remapped
|:normal|	:norm[al]	ノーマルモードのコマンドを実行する
|:number|	:nu[mber]	行番号を表示
|:nunmap|	:nun[map]	ノーマルモードを対象とする ":unmap" コマンド
|:nunmenu|	:nunme[nu]	ノーマルモードのメニューを削除
|:open|		:o[pen]		open(Operator-pending?)モードを開始(未実装)
|:omap|		:om[ap]		Operator-pending モードを対象とする ":map"
				コマンド
|:omapclear|	:omapc[lear]	Operator-pending モードのマッピングを総て削除
|:omenu|	:ome[nu]	Operator-pending モードのメニューを追加
|:only|		:on[ly]		カレントウィンドウ以外のウィンドウを総て閉じる
|:onoremap|	:ono[remap]	Operator-pending モードを対象とする ":noremap"
				コマンド
|:onoremenu|	:onoreme[nu]	Operator-pending モードを対象とする
				":noremenu" コマンド
|:options|	:opt[ions]	オプションウィンドウを開く
|:ounmap|	:ou[nmap]	Operator-pending モードを対象とした ":unmap"
				コマンド
|:ounmenu|	:ounme[nu]	Operator-pending モードのメニューを削除
|:print|	:p[rint]	行単位で印刷する
|:pclose|	:pc[lose]	プレビューウィンドウを閉じる
|:perl|		:pe[rl]		Perl コマンドを実行
|:perldo|	:perld[o]	1行ずつ Perl コマンドを実行
|:pop|		:po[p]		タグスタックの1つ古いエントリへジャンプ
|:ppop|		:pp[op]		プレビューウィンドウで ":pop" を実行
|:preserve|	:pre[serve]	総てのテキストを swap ファイルに書き出す
|:previous|	:prev[ious]	引数リスト中の前のファイルを読み込む
|:promptfind|	:pro[mptfind]	検索ダイアログを開く
|:promptrepl|	:promptr[epl]	検索/置換ダイアログを開く
|:ptag|		:pt[ag]		プレビューウィンドウにタグを表示
|:ptNext|	:ptN[ext]	プレビューウィンドウで |:tNext| を実行
|:ptjump|	:ptj[ump]	プレビューウィンドウで |:tjump| を実行、タグを
				表示
|:ptlast|	:ptl[ast]	プレビューウィンドウで |:tlast| を実行
|:ptnext|	:ptn[ext]	プレビューウィンドウで |:tnext| を実行
|:ptprevious|	:ptp[revious]	プレビューウィンドウで |:tprevious| を実行
|:ptrewind|	:ptr[ewind]	プレビューウィンドウで |:trewind| を実行
|:ptselect|	:pts[elect]	プレビューウィンドウで |:tselect| を実行、タグ
				を表示
|:put|		:pu[t]		テキストにレジスタの内容を挿入
|:pwd|		:pw[d]		カレントディレクトリを表示
|:python|	:py[thon]	Python コマンドを実行
|:pyfile|	:pyf[ile]	Python スクリプトファイルを実行
|:quit|		:q[uit]		カレントウィンドウを終了、または Vim を終了
|:qall|		:qa[ll]		Vim を終了
|:read|		:r[ead]		テキストにファイルを挿入
|:recover|	:rec[over]	swap ファイルからファイルを復元
|:redo|		:red[o]		1回のアンドゥをリドゥする
|:redir|	:redi[r]	ファイルまたはレジスタにメッセージをリダイレク
				トする
|:registers|	:reg[isters]	レジスタの内容を表示
|:resize|	:res[ize]	カレントウィンドウの高さを変更
|:retab|	:ret[ab]	タブの大きさを変更
|:return|	:retu[rn]	ユーザファンクションからリターンする
|:rewind|	:rew[ind]	引数リスト中の先頭のファイルを読み込む
|:right|	:ri[ght]	right align text
|:rviminfo|	:rv[iminfo]	viminfo ファイルを読み込む
|:substitute|	:s[ubstitute]	テキストの置換
|:sNext|	:sN[ext]	ウィンドウを分割して、引数リスト中の次のファイ
				ルを読み込む
|:sargument|	:sa[rgument]	ウィンドウを分割して、引数リスト中の指定ファイ
				ルを読み込む
|:sall|		:sal[l]		引数リスト中の各ファイルをウィンドウを開いて読
				み込む
|:sbuffer|	:sb[uffer]	ウィンドウを分割して、バッファリスト中の指定ファ
				イルを読み込む
|:sbNext|	:sbN[ext]	ウィンドウを分割して、バッファリスト中の前のファ
				イルを読み込む
|:sball|	:sba[ll]	バッファリスト中の各ファイルをウィンドウを開い
				て読み込む
|:sblast|	:sbl[ast]	ウィンドウを分割して、バッファリスト中の最後の
				ファイルを読み込む
|:sbmodified|	:sbm[odified]	ウィンドウを分割して、バッファリスト中の編集
				中のファイルを読み込む
|:sbnext|	:sbn[ext]	ウィンドウを分割して、バッファリスト中の次の
				ファイルを読み込む
|:sbprevious|	:sbp[revious]	ウィンドウを分割して、バッファリスト中の前の
				ファイルを読み込む
|:sbrewind|	:sbr[ewind]	ウィンドウを分割して、バッファリスト中の最初の
				ファイルを読み込む
|:set|		:se[t]		オプションを表示または設定する
|:sfind|	:sf[ind]	ウィンドウを分割して、'path' にあるファイルを
				編集する
|:shell|	:sh[ell]	escape to a shell
|:simalt|	:si[malt]	Win32 GUI: Windows ALT キーをシミュレートする
|:sleep|	:sl[eep]	数秒間なにもしない
|:slast|	:sla[st]	ウィンドウを分割して、引数リスト中の最後の
				ファイルを読み込む
|:smagic|	:sm[agic]	'magic' オプションの下で :substitute を実行
|:snext|	:sn[ext]	ウィンドウを分割して、引数リスト中の次の
				ファイルを読み込む
|:sniff|	:sni[ff]	send request to sniff
|:snomagic|	:sno[magic]	'nomagic' オプションの下で :substitute を実行
|:source|	:so[urce]	Vim or Ex コマンドをファイルから読み込む
|:split|	:sp[lit]	カレントウィンドウを分割
|:sprevious|	:spr[evious]	ウィンドウを分割して、引数リスト中の前の
				ファイルを読み込む
|:srewind|	:sr[ewind]	ウィンドウを分割して、引数リスト中の最初の
				ファイルを読み込む
|:stop|		:st[op]		suspend the editor or escape to a shell
|:stag|		:sta[g]		ウィンドウを分割して、タグへジャンプする
|:startinsert|	:star[tinsert]	挿入モードを開始する
|:stjump|	:stj[ump]	ウィンドウを分割して、":tjump" を実行
|:stselect|	:sts[elect]	ウィンドウを分割して、":tselect" を実行
|:sunhide|	:sun[hide]	":unhide" と同じ。
|:suspend|	:sus[pend]	":stop" と同じ。
|:sview|	:sv[iew]	ウィンドウを分割して、ファイルをリードオン
				リーで開く
|:swapname|	:sw[apname]	現在の swap ファイル名を表示
|:syntax|	:sy[ntax]	構文強調表示 (syntax highlighting)
|:syncbind|	:sync[bind]	sync scroll binding
|:t|		:t		":copy" と同じ。
|:tNext|	:tN[ext]	後方へ検索し一致したタグ位置へジャンプ
|:tag|		:ta[g]		タグを検索しジャンプする
|:tags|		:tags		タグスタックの内容を表示
|:tcl|		:tc[l]		Tcl コマンドを実行
|:tcldo|	:tcld[o]	各行の Tcl コマンドを実行
|:tclfile|	:tclf[ile]	Tcl スクリプトファイルを実行
|:tearoff|	:te[aroff]	メニューを tear-off する
|:tjump|	:tj[ump]	":tselect" と同様、ただし一致したタグが1つし
				かない場合、その場所へジャンプ
|:tlast|	:tl[ast]	直前に一致したタグ位置へジャンプ
|:tmenu|	:tm[enu]	tooltip メニューを定義する
|:tnext|	:tn[ext]	タグを前方検索し、ジャンプ
|:tprevious|	:tp[revious]	タグを後方検索し、ジャンプ
|:trewind|	:tr[ewind]	最初に一致したタグ位置へジャンプ
|:tselect|	:ts[elect]	一致したタグをリスト表示し、ジャンプ先のタグ
				を選択
|:tunmenu|	:tu[nmenu]	tooltip メニューを削除
|:undo|		:u[ndo]		最後の変更を取り消す
|:unabbreviate| :una[bbreviate] abbreviation を削除
|:unhide|	:unh[ide]	open a window for each loaded file in the
				buffer list
|:unlet|	:unl[et]	変数を削除
|:unmap|	:unm[ap]	マッピングを削除
|:unmenu|	:unme[nu]	メニューを削除
|:update|	:up[date]	バッファ内容が変更されていれば、ファイルに書
				き出す
|:vglobal|	:v[global]	execute commands for not matching lines
|:version|	:ve[rsion]	バージョン番号その他の情報を表示
|:visual|	:vi[sual]	":edit" と同じ、ただし "Ex" モードから抜ける。
|:view|		:vie[w]		リードオンリーでファイルを開く
|:vmap|		:vm[ap]		ビジュアルモードを対象とする ":map" コマンド
|:vmapclear|	:vmapc[lear]	ビジュアルモードのマッピングをすべて削除
|:vmenu|	:vme[nu]	ビジュアルモードのメニューを追加
|:vnoremap|	:vn[oremap]	ビジュアルモードを対象とする ":noremap"
				コマンド
|:vnoremenu|	:vnoreme[nu]	ビジュアルモードを対象とする ":noremenu"
				コマンド
|:vunmap|	:vu[nmap]	ビジュアルモードを対象とする ":unmap" コマン
				ド
|:vunmenu|	:vunme[nu]	ビジュアルモードのメニューを削除
|:write|	:w[rite]	ファイルに保存
|:wNext|	:wN[ext]	ファイルに保存して、引数リストの直前のファイ
				ルを編集
|:wall|		:wa[ll]		（変更した）すべてのバッファを保存
|:while|	:wh[ile]	与えた条件を満足している限りループする
|:winsize|	:wi[nsize]	ウィンドウサイズを取得もしくはセットする（古
				いコマンド）
|:winpos|	:winp[os]	ウィンドウの位置を取得もしくはセットする
|:wnext|	:wn[ext]	ファイルに保存して、引数リストの次のファイル
				を編集
|:wprevious|	:wp[revious]	ファイルに保存して、引数リストの直前のファイ
				ルを編集
|:wq|		:wq		ファイルに保存して、ウィンドウもしくは Vim を終
				了
|:wqall|	:wqa[ll]	すべての編集されたバッファを保存し、Vim を終
				了
|:wviminfo|	:wv[iminfo]	viminfo ファイルに保存
|:xit|		:x[it]		バッファが編集されていたら保存し、ウィンドウ
				もしくは Vim を終了
|:xall|		:xa[ll]		":wqall" と同じ。
|:yank|		:y[ank]		行をレジスタへヤンク
|:z|		:z		行を表示
|:~|		:~		直前に実行した ":substitute" を実行

 vim:tw=78:ts=8:ft=help:norl:
